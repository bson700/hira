1. EMPLOYEES 테이블에서 전체사원의 수와 수당(COMMISSION)을 받는 사원의 수를 출력하시오.
SELECT COUNT(*), COUNT(commission_pct)
FROM employees;
/*
107	35
*/

2. 사원의 전체이름과 입사일, 입사한 개월 수, 입사 3개월 후의 날짜, 입사 후 첫 금요일, 입사한 달의 말일을 출력하시오. 전체이름은 이름과 성 사이에 구분을 위해 공백을 추가하고, 입사한 개월 수는 반올림을 적용하여 정수로 출력하시오.
SELECT first_name||' '||last_name AS 사원이름,
       ROUND(MONTHS_BETWEEN(sysdate, hire_date)) AS 근무기간,
       ADD_MONTHS(hire_date, 3) AS "입사 3개월 후의 날짜",
       NEXT_DAY(hire_date, '금요일') AS "입사 후 첫 금요일",
       LAST_DAY(hire_date) AS "입사한 달의 말일"
FROM employees;
/*
Steven King	145	13/09/17	13/06/21	13/06/30
Neena Yang	118	15/12/21	15/09/25	15/09/30
Lex Garcia	174	11/04/13	11/01/14	11/01/31
Alexander James	114	16/04/03	16/01/08	16/01/31
Bruce Miller	98	17/08/21	17/05/26	17/05/31
David Williams	121	15/09/25	15/06/26	15/06/30
Valli Jackson	113	16/05/05	16/02/12	16/02/29
Diana Nguyen	101	17/05/07	17/02/10	17/02/28
Nancy Gruenberg	155	12/11/17	12/08/24	12/08/31
Daniel Faviet	155	12/11/16	12/08/17	12/08/31
John Chen	118	15/12/28	15/10/02	15/09/30
Ismael Sciarra	118	15/12/31	15/10/02	15/09/30
Jose Manuel Urman	112	16/06/07	16/03/11	16/03/31
Luis Popp	91	18/03/07	17/12/08	17/12/31
Den Li	151	13/03/07	12/12/14	12/12/31
Alexander Khoo	146	13/08/18	13/05/24	13/05/31
Shelli Baida	115	16/03/24	15/12/25	15/12/31
Sigal Tobias	120	15/10/24	15/07/31	15/07/31
Guy Himuro	104	17/02/15	16/11/18	16/11/30
Karen Colmenares	95	17/11/10	17/08/11	17/08/31
Matthew Weiss	132	14/10/18	14/07/25	14/07/31
Adam Fripp	123	15/07/10	15/04/17	15/04/30
Payam Kaufling	147	13/08/01	13/05/03	13/05/31
Shanta Vollman	117	16/01/10	15/10/16	15/10/31
Kevin Mourgos	92	18/02/16	17/11/17	17/11/30
Julia Nayer	120	15/10/16	15/07/17	15/07/31
Irene Mikkilineni	106	16/12/28	16/09/30	16/09/30
James Landry	102	17/04/14	17/01/20	17/01/31
Steven Markle	88	18/06/08	18/03/09	18/03/31
Laura Bissot	119	15/11/20	15/08/21	15/08/31
Mozhe Atkinson	117	16/01/30	15/11/06	15/10/31
James Marlow	125	15/05/16	15/02/20	15/02/28
TJ Olson	99	17/07/10	17/04/14	17/04/30
Jason Mallin	133	14/09/14	14/06/20	14/06/30
Michael Rogers	107	16/11/26	16/09/02	16/08/31
Ki Gee	91	18/03/12	17/12/15	17/12/31
Hazel Philtanker	89	18/05/06	18/02/09	18/02/28
Renske Ladwig	144	13/10/14	13/07/19	13/07/31
Stephen Stiles	117	16/01/26	15/10/30	15/10/31
John Seo	113	16/05/12	16/02/19	16/02/29
Joshua Patel	111	16/07/06	16/04/08	16/04/30
Trenna Rajs	141	14/01/17	13/10/18	13/10/31
Curtis Davies	126	15/04/29	15/01/30	15/01/31
Randall Matos	112	16/06/15	16/03/18	16/03/31
Peter Vargas	108	16/10/09	16/07/15	16/07/31
John Singh	130	15/01/01	14/10/03	14/10/31
Karen Partners	126	15/04/05	15/01/09	15/01/31
Alberto Errazuriz	124	15/06/10	15/03/13	15/03/31
Gerald Cambrault	93	18/01/15	17/10/20	17/10/31
Eleni Zlotkey	90	18/04/29	18/02/02	18/01/31
Sean Tucker	126	15/04/30	15/02/06	15/01/31
David Bernstein	124	15/06/24	15/03/27	15/03/31
Peter Hall	119	15/11/20	15/08/21	15/08/31
Christopher Olsen	112	16/06/30	16/04/01	16/03/31
Nanette Cambrault	103	17/03/09	16/12/16	16/12/31
Oliver Tuvault	92	18/02/23	17/11/24	17/11/30
Janette King	138	14/04/30	14/01/31	14/01/31
Patrick Sully	136	14/06/04	14/03/07	14/03/31
Allan McEwen	132	14/11/01	14/08/08	14/08/31
Lindsey Smith	124	15/06/10	15/03/13	15/03/31
Louise Doran	115	16/03/15	15/12/18	15/12/31
Sarath Sewall	104	17/02/03	16/11/04	16/11/30
Clara Vishney	116	16/02/11	15/11/13	15/11/30
Danielle Greene	100	17/06/19	17/03/24	17/03/31
Mattea Marvins	90	18/04/24	18/01/26	18/01/31
David Lee	89	18/05/23	18/03/02	18/02/28
Sundar Ande	88	18/06/24	18/03/30	18/03/31
Amit Banda	87	18/07/21	18/04/27	18/04/30
Lisa Ozer	124	15/06/11	15/03/13	15/03/31
Harrison Bloom	112	16/06/23	16/03/25	16/03/31
Tayler Fox	114	16/04/24	16/01/29	16/01/31
William Smith	101	17/05/23	17/02/24	17/02/28
Elizabeth Bates	100	17/06/24	17/03/31	17/03/31
Sundita Kumar	87	18/07/21	18/04/27	18/04/30
Ellen Abel	134	14/08/11	14/05/16	14/05/31
Alyssa Hutton	124	15/06/19	15/03/20	15/03/31
Jonathon Taylor	112	16/06/24	16/03/25	16/03/31
Jack Livingston	111	16/07/23	16/04/29	16/04/30
Kimberely Grant	98	17/08/24	17/05/26	17/05/31
Charles Johnson	90	18/04/04	18/01/05	18/01/31
Winston Taylor	114	16/04/24	16/01/29	16/01/31
Jean Fleaur	113	16/05/23	16/02/26	16/02/29
Martha Sullivan	97	17/09/21	17/06/23	17/06/30
Girard Geoni	89	18/05/03	18/02/09	18/02/28
Nandita Sarchand	138	14/04/27	14/01/31	14/01/31
Alexis Bull	125	15/05/20	15/02/27	15/02/28
Julia Dellinger	109	16/09/24	16/07/01	16/06/30
Anthony Cabrio	101	17/05/07	17/02/10	17/02/28
Kelly Chung	121	15/09/14	15/06/19	15/06/30
Jennifer Dilly	119	15/11/13	15/08/14	15/08/31
Timothy Venzl	108	16/10/11	16/07/15	16/07/31
Randall Perkins	91	18/03/19	17/12/22	17/12/31
Sarah Bell	137	14/05/04	14/02/07	14/02/28
Britney Everett	124	15/06/03	15/03/06	15/03/31
Samuel McLeod	109	16/10/01	16/07/08	16/07/31
Vance Jones	100	17/06/17	17/03/24	17/03/31
Alana Walsh	111	16/07/24	16/04/29	16/04/30
Kevin Feeney	110	16/08/23	16/05/27	16/05/31
Donald OConnell	97	17/09/21	17/06/23	17/06/30
Douglas Grant	90	18/04/13	18/01/19	18/01/31
Jennifer Whalen	142	13/12/17	13/09/20	13/09/30
Michael Martinez	137	14/05/17	14/02/21	14/02/28
Pat Davis	119	15/11/17	15/08/21	15/08/31
Susan Jacobs	157	12/09/07	12/06/08	12/06/30
Hermann Brown	157	12/09/07	12/06/08	12/06/30
Shelley Higgins	157	12/09/07	12/06/08	12/06/30
William Gietz	157	12/09/07	12/06/08	12/06/30
*/

3. 사원테이블에서 부서번호가 NULL이 아닌 사원들을 대상으로 부서번호 별 최대급여를 출력하시오.
SELECT department_id, MAX(salary)
FROM employees
WHERE department_id IS NOT NULL
GROUP BY department_id;
/*
50	8200
40	6500
110	12008
90	24000
30	11000
70	10000
10	4400
20	13000
60	9000
100	12008
80	14000
*/

4. 1800번 위치에 근무하는 사원의 부서 이름, 위치, 이름, 업무 및 급여를 표시하시오.
SELECT d.department_name, d.location_id, e.last_name, e.job_id, e.salary
FROM employees e JOIN departments d
ON (e.department_id = d.department_id)
AND d.location_id = 1800;
/*
Marketing	1800	Martinez	MK_MAN	13000
Marketing	1800	Davis	MK_REP	6000
*/

5. Administration 및 Executive 부서에는 어떤 업무(JOB_ID)가 있으며 해당 업무를 맡고 있는 사원 수는 몇 명입니까? 인원이 가장 많은 업무부터 표시하시오.
SELECT e.job_id, COUNT(e.job_id) AS FREQUENCY
FROM employees e JOIN departments d
USING (department_id)
WHERE d.department_name IN ('Administration', 'Executive')
GROUP BY e.job_id
ORDER BY FREQUENCY DESC;
/*
AD_VP	2
AD_PRES	1
AD_ASST	1
*/

6. 평균 급여가 가장 높은 부서의 부서 번호 및 해당 부서의 최저 급여를 표시하시오.
SELECT department_id, MIN(salary)
FROM   employees
GROUP BY department_id
HAVING AVG(salary) = (SELECT MAX(AVG(salary))
                      FROM   employees
                      GROUP BY department_id);
/*
90	17000
*/

7. 영업 사원(JOB_ID가 SA_REP)이 없는 부서의 부서 번호, 이름 및 위치를 표시하시오.
SELECT department_id, department_name, location_id
FROM departments
WHERE department_id NOT IN (SELECT department_id
                            FROM employees
                            WHERE job_id = 'SA_REP'
                            AND department_id IS NOT NULL);
/*
10	Administration	200	1700
20	Marketing	201	1800
30	Purchasing	114	1700
40	Human Resources	203	2400
50	Shipping	121	1500
60	IT	103	1400
70	Public Relations	204	2700
90	Executive	100	1700
100	Finance	108	1700
110	Accounting	205	1700
120	Treasury		1700
130	Corporate Tax		1700
140	Control And Credit		1700
150	Shareholder Services		1700
160	Benefits		1700
170	Manufacturing		1700
180	Construction		1700
190	Contracting		1700
200	Operations		1700
210	IT Support		1700
220	NOC		1700
230	IT Helpdesk		1700
240	Government Sales		1700
250	Retail Sales		1700
260	Recruiting		1700
270	Payroll		1700
*/

8. 다음과 같은 부서의 부서 번호, 부서 이름 및 사원 수를 표시하시오.
(1) 사원이 3명 미만인 부서
SELECT d.department_id, d.department_name, COUNT(*)
FROM   departments d JOIN employees e
ON     (d.department_id = e.department_id)
GROUP BY d.department_id, d.department_name
HAVING COUNT(*) < 3;
/*
110	Accounting	2
70	Public Relations	1
10	Administration	1
20	Marketing	2
40	Human Resources	1
*/
(2) 사원 수가 가장 많은 부서
SELECT d.department_id, d.department_name, COUNT(*)
FROM   departments d JOIN employees e
ON (d.department_id = e.department_id)
GROUP BY d.department_id, d.department_name
HAVING COUNT(*) = (SELECT MAX(COUNT(*))
                   FROM   employees
                   GROUP BY department_id);
/*
50	Shipping	45
*/

9. 모든 사원의 사원 번호, 이름, 급여, 부서 번호 및 소속 부서의 평균 급여를 표시하시오.
SELECT e.employee_id, e.last_name, e.department_id, AVG(s.salary)
FROM   employees e JOIN employees s
ON     e.department_id = s.department_id
GROUP BY e.employee_id, e.last_name, e.department_id;
/*
100	King	90	19333.3333333333333333333333333333333333
101	Yang	90	19333.3333333333333333333333333333333333
102	Garcia	90	19333.3333333333333333333333333333333333
103	James	60	5760
104	Miller	60	5760
105	Williams	60	5760
106	Jackson	60	5760
107	Nguyen	60	5760
108	Gruenberg	100	8601.333333333333333333333333333333333333
109	Faviet	100	8601.333333333333333333333333333333333333
110	Chen	100	8601.333333333333333333333333333333333333
111	Sciarra	100	8601.333333333333333333333333333333333333
112	Urman	100	8601.333333333333333333333333333333333333
113	Popp	100	8601.333333333333333333333333333333333333
114	Li	30	4150
115	Khoo	30	4150
116	Baida	30	4150
117	Tobias	30	4150
118	Himuro	30	4150
119	Colmenares	30	4150
120	Weiss	50	3475.555555555555555555555555555555555556
121	Fripp	50	3475.555555555555555555555555555555555556
122	Kaufling	50	3475.555555555555555555555555555555555556
123	Vollman	50	3475.555555555555555555555555555555555556
124	Mourgos	50	3475.555555555555555555555555555555555556
125	Nayer	50	3475.555555555555555555555555555555555556
126	Mikkilineni	50	3475.555555555555555555555555555555555556
127	Landry	50	3475.555555555555555555555555555555555556
128	Markle	50	3475.555555555555555555555555555555555556
129	Bissot	50	3475.555555555555555555555555555555555556
130	Atkinson	50	3475.555555555555555555555555555555555556
131	Marlow	50	3475.555555555555555555555555555555555556
132	Olson	50	3475.555555555555555555555555555555555556
133	Mallin	50	3475.555555555555555555555555555555555556
134	Rogers	50	3475.555555555555555555555555555555555556
135	Gee	50	3475.555555555555555555555555555555555556
136	Philtanker	50	3475.555555555555555555555555555555555556
137	Ladwig	50	3475.555555555555555555555555555555555556
138	Stiles	50	3475.555555555555555555555555555555555556
139	Seo	50	3475.555555555555555555555555555555555556
140	Patel	50	3475.555555555555555555555555555555555556
141	Rajs	50	3475.555555555555555555555555555555555556
142	Davies	50	3475.555555555555555555555555555555555556
143	Matos	50	3475.555555555555555555555555555555555556
144	Vargas	50	3475.555555555555555555555555555555555556
145	Singh	80	8955.882352941176470588235294117647058824
146	Partners	80	8955.882352941176470588235294117647058824
147	Errazuriz	80	8955.882352941176470588235294117647058824
148	Cambrault	80	8955.882352941176470588235294117647058824
149	Zlotkey	80	8955.882352941176470588235294117647058824
150	Tucker	80	8955.882352941176470588235294117647058824
151	Bernstein	80	8955.882352941176470588235294117647058824
152	Hall	80	8955.882352941176470588235294117647058824
153	Olsen	80	8955.882352941176470588235294117647058824
154	Cambrault	80	8955.882352941176470588235294117647058824
155	Tuvault	80	8955.882352941176470588235294117647058824
156	King	80	8955.882352941176470588235294117647058824
157	Sully	80	8955.882352941176470588235294117647058824
158	McEwen	80	8955.882352941176470588235294117647058824
159	Smith	80	8955.882352941176470588235294117647058824
160	Doran	80	8955.882352941176470588235294117647058824
161	Sewall	80	8955.882352941176470588235294117647058824
162	Vishney	80	8955.882352941176470588235294117647058824
163	Greene	80	8955.882352941176470588235294117647058824
164	Marvins	80	8955.882352941176470588235294117647058824
165	Lee	80	8955.882352941176470588235294117647058824
166	Ande	80	8955.882352941176470588235294117647058824
167	Banda	80	8955.882352941176470588235294117647058824
168	Ozer	80	8955.882352941176470588235294117647058824
169	Bloom	80	8955.882352941176470588235294117647058824
170	Fox	80	8955.882352941176470588235294117647058824
171	Smith	80	8955.882352941176470588235294117647058824
172	Bates	80	8955.882352941176470588235294117647058824
173	Kumar	80	8955.882352941176470588235294117647058824
174	Abel	80	8955.882352941176470588235294117647058824
175	Hutton	80	8955.882352941176470588235294117647058824
176	Taylor	80	8955.882352941176470588235294117647058824
177	Livingston	80	8955.882352941176470588235294117647058824
179	Johnson	80	8955.882352941176470588235294117647058824
180	Taylor	50	3475.555555555555555555555555555555555556
181	Fleaur	50	3475.555555555555555555555555555555555556
182	Sullivan	50	3475.555555555555555555555555555555555556
183	Geoni	50	3475.555555555555555555555555555555555556
184	Sarchand	50	3475.555555555555555555555555555555555556
185	Bull	50	3475.555555555555555555555555555555555556
186	Dellinger	50	3475.555555555555555555555555555555555556
187	Cabrio	50	3475.555555555555555555555555555555555556
188	Chung	50	3475.555555555555555555555555555555555556
189	Dilly	50	3475.555555555555555555555555555555555556
190	Venzl	50	3475.555555555555555555555555555555555556
191	Perkins	50	3475.555555555555555555555555555555555556
192	Bell	50	3475.555555555555555555555555555555555556
193	Everett	50	3475.555555555555555555555555555555555556
194	McLeod	50	3475.555555555555555555555555555555555556
195	Jones	50	3475.555555555555555555555555555555555556
196	Walsh	50	3475.555555555555555555555555555555555556
197	Feeney	50	3475.555555555555555555555555555555555556
198	OConnell	50	3475.555555555555555555555555555555555556
199	Grant	50	3475.555555555555555555555555555555555556
200	Whalen	10	4400
201	Martinez	20	9500
202	Davis	20	9500
203	Jacobs	40	6500
204	Brown	70	10000
205	Higgins	110	10154
206	Gietz	110	10154
*/

10. 다음과 같은 그룹화에 대하여 각 그룹의 최고 및 최저 급여를 표시하는 질의를 작성하시오. 
	부서 ID, 업무 ID
	업무 ID, 관리자 ID
      SELECT department_id, job_id, manager_id, max(salary), min(salary)
      FROM   employees
      GROUP BY GROUPING SETS
      ((department_id,job_id), (job_id,manager_id));
/*
90	AD_VP		17000	17000
100	FI_MGR		12008	12008
80	SA_REP		11500	6100
	SA_REP		7000	7000
90	AD_PRES		24000	24000
20	MK_REP		6000	6000
110	AC_MGR		12008	12008
60	IT_PROG		9000	4200
30	PU_CLERK		3100	2500
80	SA_MAN		14000	10500
50	SH_CLERK		4200	2500
20	MK_MAN		13000	13000
30	PU_MAN		11000	11000
50	ST_CLERK		3600	2100
70	PR_REP		10000	10000
110	AC_ACCOUNT		8300	8300
50	ST_MAN		8200	5800
100	FI_ACCOUNT		9000	6900
10	AD_ASST		4400	4400
40	HR_REP		6500	6500
	ST_CLERK	124	3500	2500
	SA_MAN	100	14000	10500
	AC_MGR	101	12008	12008
	FI_ACCOUNT	108	9000	6900
	MK_REP	201	6000	6000
	PR_REP	101	10000	10000
	AD_VP	100	17000	17000
	PU_MAN	100	11000	11000
	AD_ASST	101	4400	4400
	HR_REP	101	6500	6500
	PU_CLERK	114	3100	2500
	SH_CLERK	120	3200	2500
	ST_CLERK	123	3600	2500
	SH_CLERK	122	3800	2500
	AC_ACCOUNT	205	8300	8300
	ST_CLERK	120	3200	2200
	ST_CLERK	121	3300	2100
	SA_REP	145	10000	7000
	SA_REP	147	10500	6200
	SA_REP	148	11500	6100
	SH_CLERK	121	4200	3000
	SH_CLERK	124	3100	2600
	IT_PROG	103	6000	4200
	FI_MGR	101	12008	12008
	ST_MAN	100	8200	5800
	SH_CLERK	123	4000	2800
	AD_PRES		24000	24000
	IT_PROG	102	9000	9000
	ST_CLERK	122	3300	2200
	SA_REP	146	10000	7000
	SA_REP	149	11000	6200
	MK_MAN	100	13000	13000
*/

11. EMPLOYEES 테이블에서 가장 많은 급여를 받는 세 명의 사원에 대해 이름과 급여를 표시하는 질의를 작성하시오.
SELECT last_name, salary
FROM   employees e
WHERE  3 > (SELECT COUNT(*)
            FROM   employees
            WHERE  e.salary < salary);
/*
King	24000
Yang	17000
Garcia	17000
*/

12. California 주에서 근무하는 사원의 사원 ID와 이름을 표시하는 질의를 작성하시오. 
SELECT employee_id, last_name
FROM employees e
WHERE ((SELECT location_id
        FROM departments d
        WHERE e.department_id = d.department_id ) IN   (SELECT location_id
FROM locations l
                                                        WHERE STATE_province = 'California'));
/*
120	Weiss
121	Fripp
122	Kaufling
123	Vollman
124	Mourgos
125	Nayer
126	Mikkilineni
127	Landry
128	Markle
129	Bissot
130	Atkinson
131	Marlow
132	Olson
133	Mallin
134	Rogers
135	Gee
136	Philtanker
137	Ladwig
138	Stiles
139	Seo
140	Patel
141	Rajs
142	Davies
143	Matos
144	Vargas
180	Taylor
181	Fleaur
182	Sullivan
183	Geoni
184	Sarchand
185	Bull
186	Dellinger
187	Cabrio
188	Chung
189	Dilly
190	Venzl
191	Perkins
192	Bell
193	Everett
194	McLeod
195	Jones
196	Walsh
197	Feeney
198	OConnell
199	Grant
*/

13. 해당 업무의 최고 급여가 회사 전체의 업무별 최고 급여 중에서 상위 50% 안에 드는 업무ID를 표시하는 질의를 작성하시오. WITH 절을 사용하여 작성하고 쿼리블록 이름은 MAX_SAL_CALC로 지정하시오.
WITH 
MAX_SAL_CALC AS (
SELECT job_title, MAX(salary) AS job_total
FROM employees JOIN jobs
ON (employees.job_id = jobs.job_id)
GROUP BY job_title)
SELECT job_title, job_total
FROM MAX_SAL_CALC
WHERE job_total > (SELECT MAX(job_total) * 1/2
                   FROM MAX_SAL_CALC)
ORDER BY job_total DESC;
/*
President	24000
Administration Vice President	17000
Sales Manager	14000
Marketing Manager	13000
Accounting Manager	12008
Finance Manager	12008
*/

